{
	"info": {
		"_postman_id": "bdd70245-c5ee-4965-a5c7-54935ab0227c",
		"name": "My API collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25888994"
	},
	"item": [
		{
			"name": "Get ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"pm.test(\"confirm id is 4c03efcb-f082-448a-a23a-59efc623ef2f\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Id={{entityId}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Id",
							"value": "{{entityId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"confirm name is MyTutorCollection\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Name={{entityName}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Name",
							"value": "{{entityName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Description",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"confirm description is For collection of my own examples during tutorial training\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?descripition={{entityDescription}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "descripition",
							"value": "{{entityDescription}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"confirm auth is null\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Auth={{entityAuth}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Auth",
							"value": "{{entityAuth}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"confirm event is null \", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Events={{entityEvents}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Events",
							"value": "{{entityEvents}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Variables",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"confirm variables is [0] \", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Variables={{entityVariables}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Variables",
							"value": "{{entityVariables}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							" pm.test(\"confirm order [1] is acd9e54c-f8ff-49ce-92c5-bd4ca1d3ca36 \", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Order={{entityOrder}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Order",
							"value": "{{entityOrder}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Folders order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"confirm folders_order: [3] ced65177-78d1-43e6-8e7a-ba20571d8f05\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Folders_order={{entityFolders_order}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Folders_order",
							"value": "{{entityFolders_order}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get requests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.id)\r",
							"console.log(jsonData.name)\r",
							"console.log(jsonData.description)\r",
							"console.log(jsonData.auth)\r",
							"console.log(jsonData.events)\r",
							"console.log(jsonData.variables)\r",
							"console.log(jsonData.order)\r",
							"console.log(jsonData.folders_order)\r",
							"console.log(jsonData.requests)\r",
							"\r",
							"pm.environment.set(\"entityId\", \"jsonData.id\");\r",
							"pm.environment.set(\"entityName\", \"jsonData.name\");\r",
							"pm.environment.set(\"entityDescription\", \"jsonData.description\");\r",
							"pm.environment.set(\"entityAuth\", \"jsonData.auth\");\r",
							"pm.environment.set(\"entityEvents\", \"jsonDat.events\");\r",
							"pm.environment.set(\"entityVariables\", \"jsonData.variables\");\r",
							"pm.environment.set(\"entityOrder\", \"jsonData.order\");\r",
							"pm.environment.set(\"entityFolders_order\", \"jsonData.folders_order\");\r",
							"pm.environment.set(\"entityRequests\", \"jsonData.requests\");\r",
							"\r",
							"pm.test(\"Status code name should have an OK string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"confirm requests [12] has id 53ff73f9-7b19-4347-a69f-72dd135fd67d\", function () {\r",
							"    pm.expect(jsonData.id).to.eql(\"4c03efcb-f082-448a-a23a-59efc623ef2f\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}?Requests={{entityRequests}}",
					"host": [
						"{{baseurl}}"
					],
					"query": [
						{
							"key": "Requests",
							"value": "{{entityRequests}}"
						}
					]
				}
			},
			"response": []
		}
	]
}